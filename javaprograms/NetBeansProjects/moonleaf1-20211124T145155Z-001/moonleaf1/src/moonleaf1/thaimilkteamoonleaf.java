/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package moonleaf1;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;

/**
 *
 * @author lenovo
 */
public class thaimilkteamoonleaf extends javax.swing.JFrame {
     Connection  conn= Moonleaf1.ConnecrDb();
    OraclePreparedStatement pst= null ;
    OracleResultSet rs= null; 
    double atdog;

    /**
     * Creates new form thaimilkteamoonleaf
     */
    public thaimilkteamoonleaf() {
        initComponents();
         Toolkit  toolkit= getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size .height/2 - getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        tgmtr = new javax.swing.JButton();
        tgmtt = new javax.swing.JButton();
        tmtr = new javax.swing.JButton();
        tmtt = new javax.swing.JButton();
        tpmr = new javax.swing.JButton();
        tpmt = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabelClose6 = new javax.swing.JLabel();
        JLabelMin6 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        total = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        clear = new javax.swing.JButton();
        payment = new javax.swing.JButton();
        addons = new javax.swing.JButton();
        add1 = new javax.swing.JButton();
        back = new javax.swing.JButton();

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel14.setText("Lychee Yakult");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 204, 0), 3, true));

        jLabel3.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("R");

        jLabel5.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("T");

        jLabel15.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel15.setText("Thai Green Milk Tea");

        jLabel16.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel16.setText("Thai Milk Tea");

        jLabel17.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel17.setText("Thai Pink Milk");

        tgmtr.setBackground(new java.awt.Color(204, 204, 255));
        tgmtr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        tgmtr.setText("Php 95");
        tgmtr.setBorder(null);
        tgmtr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tgmtrActionPerformed(evt);
            }
        });

        tgmtt.setBackground(new java.awt.Color(204, 204, 255));
        tgmtt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        tgmtt.setText("Php 105");
        tgmtt.setBorder(null);
        tgmtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tgmttActionPerformed(evt);
            }
        });

        tmtr.setBackground(new java.awt.Color(204, 204, 255));
        tmtr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        tmtr.setText("Php 85");
        tmtr.setBorder(null);
        tmtr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmtrActionPerformed(evt);
            }
        });

        tmtt.setBackground(new java.awt.Color(204, 204, 255));
        tmtt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        tmtt.setText("Php 95");
        tmtt.setBorder(null);
        tmtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmttActionPerformed(evt);
            }
        });

        tpmr.setBackground(new java.awt.Color(204, 204, 255));
        tpmr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        tpmr.setText("Php 105");
        tpmr.setBorder(null);
        tpmr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpmrActionPerformed(evt);
            }
        });

        tpmt.setBackground(new java.awt.Color(204, 204, 255));
        tpmt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        tpmt.setText("Php 115");
        tpmt.setBorder(null);
        tpmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpmtActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(153, 204, 0));

        jLabelClose6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabelClose6.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose6.setText("X");
        jLabelClose6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelClose6MouseClicked(evt);
            }
        });

        JLabelMin6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        JLabelMin6.setForeground(new java.awt.Color(255, 255, 255));
        JLabelMin6.setText("_");
        JLabelMin6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JLabelMin6MouseClicked(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Thai Form");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE)
                .addComponent(JLabelMin6)
                .addGap(18, 18, 18)
                .addComponent(jLabelClose6)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelClose6)
                            .addComponent(JLabelMin6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        display.setBackground(new java.awt.Color(0, 0, 0));
        display.setColumns(20);
        display.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        display.setForeground(new java.awt.Color(255, 255, 255));
        display.setRows(5);
        display.setBorder(null);
        jScrollPane2.setViewportView(display);

        total.setBackground(new java.awt.Color(51, 51, 51));
        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\lenovo\\Documents\\NetBeansProjects\\moonleaf1-20200125T075433Z-001\\moonleaf1\\Photo\\Menu Icon\\Thai milk tea.jpg")); // NOI18N

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moonleaf1/moonleaflogo (Custom) (Custom).jpg"))); // NOI18N

        jLabel19.setFont(new java.awt.Font("Ink Free", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(153, 204, 0));
        jLabel19.setText("Moonleaf Cafe");

        clear.setBackground(new java.awt.Color(204, 0, 0));
        clear.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("clear");
        clear.setBorder(null);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        payment.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        payment.setForeground(new java.awt.Color(51, 204, 0));
        payment.setText("payment");
        payment.setBorder(null);
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });

        addons.setBackground(new java.awt.Color(0, 0, 0));
        addons.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        addons.setForeground(new java.awt.Color(255, 255, 0));
        addons.setText("Add-ons");
        addons.setBorder(null);
        addons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addonsActionPerformed(evt);
            }
        });

        add1.setBackground(new java.awt.Color(0, 204, 204));
        add1.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        add1.setText("Add");
        add1.setBorder(null);
        add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add1ActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(0, 0, 0));
        back.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 0));
        back.setText("Back");
        back.setBorder(null);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel17))
                                .addGap(84, 84, 84)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tgmtr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tmtr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tpmr, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tpmt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(tmtt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(tgmtt, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                                        .addGap(66, 66, 66))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)
                        .addGap(109, 109, 109))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(add1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addons, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel19)))
                        .addGap(50, 50, 50)
                        .addComponent(jLabel4)
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tgmtr)
                                    .addComponent(tgmtt))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tmtr)
                                    .addComponent(tmtt))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tpmr)
                                    .addComponent(tpmt)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel16)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel17))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(add1)
                        .addComponent(addons)
                        .addComponent(back))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(payment)
                        .addComponent(clear)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tgmtrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tgmtrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
         String tgmtear,newline,name,price;
         name="Thai Green Milk Tea(Regular)";
         price="95.00";
         double thaigmtr=95.00;
        tgmtear="Thai Green Milk Tea(Regular)=P95.00";
        newline="\n";
        display.setText(display.getText()+tgmtear);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+thaigmtr;
       total.setText(""+atdog);
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       
       try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Thai Green Milk Tea',SIZEE='Regular',PRICEORDER=95.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
          try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_tgmtrActionPerformed

    private void tgmttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tgmttActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
           String tgmteat,newline,name,price;
           name="Thai Green Milk Tea(Tall)";
           price="105.00";
           double thaigmtt=105.00;
        tgmteat="Thai Green Milk Tea(Tall)=P105.00";
        newline="\n";
        display.setText(display.getText()+tgmteat);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+thaigmtt;
       total.setText(""+atdog);
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Thai Green Milk Tea',SIZEE='Tall',PRICEORDER=105.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
          try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_tgmttActionPerformed

    private void tmtrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmtrActionPerformed
        // TODO add your handling code here:\
        conn= Moonleaf1.ConnecrDb();
           String tmtear,newline,name,price;
           name="Thai Milk Tea(Regular)";
           price="85.00";
           double thaimtr=85.00;
        tmtear="Thai Milk Tea(Regular)=P85.00";
        newline="\n";
        display.setText(display.getText()+tmtear);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+thaimtr;
       total.setText(""+atdog);
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Thai Milk Tea',SIZEE='Regular',PRICEORDER=85.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
          try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_tmtrActionPerformed

    private void tmttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmttActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
           String tmteat,newline,name,price;
           name="Thai Milk Tea(Tall)";
           price="95.00";
           double thaimtt=95.00;
        tmteat="Thai Milk Tea(Tall)=P95.00";
        newline="\n";
        display.setText(display.getText()+tmteat);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+thaimtt;
       total.setText(""+atdog);
         DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Thai Milk Tea',SIZEE='Tall',PRICEORDER=95.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
          try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_tmttActionPerformed

    private void tpmrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpmrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
           String tpmilkr,newline,name,price;
           name="Thai Pink Milk(Regular)";
           price="105.00";
           double thaipmr=105.00;
        tpmilkr="Thai Pink Milk(Regular)=P105.00";
        newline="\n";
        display.setText(display.getText()+tpmilkr);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+thaipmr;
       total.setText(""+atdog);
         DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        
        try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Thai Pink Milk',SIZEE='Regular',PRICEORDER=105.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
          try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_tpmrActionPerformed

    private void tpmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpmtActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
           String tpmilkt,newline,name,price;
           name="Thai Pink Milk(Tall)";
           price="115.00";
           double thaipmt=115.00;
        tpmilkt="Thai Pink Milk(Tall)=P115.00";
        newline="\n";
        display.setText(display.getText()+tpmilkt);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+thaipmt;
       total.setText(""+atdog);
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Thai Pink Milk',SIZEE='Tall',PRICEORDER=115.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
          try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_tpmtActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
         try {
            String content;
            content=new String(Files.readAllBytes(Paths.get("copy.txt")));
                    display.setText(content);
        } catch (IOException ex) {
            Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }
        
          try {
            String content;
            content=new String(Files.readAllBytes(Paths.get("total.txt")));
                    total.setText(content);
        } catch (IOException ex) {
            Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void jLabelClose6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelClose6MouseClicked
        // Close
        System.exit(0);
    }//GEN-LAST:event_jLabelClose6MouseClicked

    private void JLabelMin6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JLabelMin6MouseClicked
        // TODO add your handling code here

        this.setState(javax.swing.JFrame.ICONIFIED);
    }//GEN-LAST:event_JLabelMin6MouseClicked

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf=new SimpleDateFormat ("dd-MMM-yy hh:mm:ss aa");
        String datee=sdf.format(new Date()).toString();
        conn=Moonleaf1.ConnecrDb();

        display.setText("");
        total.setText("0.00");

        try{
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED SET STATUS='CHANGED' WHERE DATEORDERED= to_timestamp('"+content+"')");
            st.executeUpdate("DELETE ORDERED WHERE STATUS='CHANGED'");
            st.executeUpdate("DELETE ORDERED WHERE STATUS='ADD'");
            
            st.executeUpdate("INSERT INTO ORDERED VALUES ('"+datee+"','','','','','','')");
            conn.close();
            try(PrintWriter writer=new PrintWriter("time.txt", "UTF-8")){
                writer.println(datee);

                writer.close();}
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println("");
            display.setText(display.getText());
            writer.close();
        }

        catch (FileNotFoundException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }

        //clearing totaaaaaalllllll
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println("");
            total.setText(total.getText());
            writer.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        try(PrintWriter writer=new PrintWriter("officialreceipt.txt", "UTF-8")){
            writer.println("                   *Moonleaf Cafe*                     ");
            writer.println("                 "+ datee);
            writer.println("Order"+"                                          "+ "Price");
            writer.close();} catch (FileNotFoundException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clearActionPerformed

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        // TODO add your handling code here:
        paymentmoonleaf user=new paymentmoonleaf();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_paymentActionPerformed

    private void addonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addonsActionPerformed
        // TODO add your handling code here:
        addons user=new addons();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_addonsActionPerformed

    private void add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add1ActionPerformed
        // TODO add your handling code here:
        conn=Moonleaf1.ConnecrDb();
        SimpleDateFormat sdf=new SimpleDateFormat ("dd-MMM-yy hh:mm:ss aa");
        String datee=sdf.format(new Date()).toString();

        try{

            Statement st= conn.createStatement();
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            st.executeUpdate("UPDATE ORDERED SET STATUS='ADD' WHERE DATEORDERED=to_timestamp('"+content+"')");
            st.executeUpdate("INSERT INTO ORDERED "+ "VALUES('"+datee+"','','','','','','')");
            conn.close();
            try(PrintWriter writer=new PrintWriter("time.txt", "UTF-8")){
                writer.println(datee);
                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_add1ActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        frame1 user=new frame1();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(thaimilkteamoonleaf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new thaimilkteamoonleaf().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabelMin6;
    private javax.swing.JButton add1;
    private javax.swing.JButton addons;
    private javax.swing.JButton back;
    private javax.swing.JButton clear;
    private javax.swing.JTextArea display;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelClose6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton payment;
    private javax.swing.JButton tgmtr;
    private javax.swing.JButton tgmtt;
    private javax.swing.JButton tmtr;
    private javax.swing.JButton tmtt;
    private javax.swing.JTextField total;
    private javax.swing.JButton tpmr;
    private javax.swing.JButton tpmt;
    // End of variables declaration//GEN-END:variables
}
