/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package moonleaf1;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;

/**
 *
 * @author lenovo
 */
public class addons extends javax.swing.JFrame {
     Connection  conn= Moonleaf1.ConnecrDb();
    OraclePreparedStatement pst= null ;
    OracleResultSet rs= null; 

   
   double atdog=0;        
   
   
   
   
   
    
    
        
    public addons()
    {
       
        initComponents();
        Toolkit  toolkit= getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size .height/2 - getHeight()/2); 
         
    }

/**
     * Creates new form addons
     */
        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        chia = new javax.swing.JButton();
        jelly = new javax.swing.JButton();
        ppearl = new javax.swing.JButton();
        natamilk = new javax.swing.JButton();
        sc = new javax.swing.JButton();
        wc = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabelClose2 = new javax.swing.JLabel();
        JLabelMin2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        total = new javax.swing.JTextField();
        clear = new javax.swing.JButton();
        addons = new javax.swing.JButton();
        payment = new javax.swing.JButton();
        add1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 204, 0), 3, true));

        jLabel15.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel15.setText("Chia Seeds");

        jLabel16.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel16.setText("Grass Jelly/Matcha Jelly");

        jLabel17.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel17.setText("Pudding/Pearls/White Pearls");

        jLabel18.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel18.setText("Milk/Nata");

        jLabel19.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel19.setText("Salted Cream");

        jLabel20.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel20.setText("Whipped Cream");

        chia.setBackground(new java.awt.Color(0, 0, 0));
        chia.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        chia.setForeground(new java.awt.Color(255, 255, 255));
        chia.setText("Php 25");
        chia.setBorder(null);
        chia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chiaActionPerformed(evt);
            }
        });

        jelly.setBackground(new java.awt.Color(0, 0, 0));
        jelly.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        jelly.setForeground(new java.awt.Color(255, 255, 255));
        jelly.setText("Php 15");
        jelly.setBorder(null);
        jelly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jellyActionPerformed(evt);
            }
        });

        ppearl.setBackground(new java.awt.Color(0, 0, 0));
        ppearl.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        ppearl.setForeground(new java.awt.Color(255, 255, 255));
        ppearl.setText("Php 15");
        ppearl.setBorder(null);
        ppearl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppearlActionPerformed(evt);
            }
        });

        natamilk.setBackground(new java.awt.Color(0, 0, 0));
        natamilk.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        natamilk.setForeground(new java.awt.Color(255, 255, 255));
        natamilk.setText("Php 15");
        natamilk.setBorder(null);
        natamilk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natamilkActionPerformed(evt);
            }
        });

        sc.setBackground(new java.awt.Color(0, 0, 0));
        sc.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        sc.setForeground(new java.awt.Color(255, 255, 255));
        sc.setText("Php 30");
        sc.setBorder(null);
        sc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scActionPerformed(evt);
            }
        });

        wc.setBackground(new java.awt.Color(0, 0, 0));
        wc.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        wc.setForeground(new java.awt.Color(255, 255, 255));
        wc.setText("Php 20");
        wc.setBorder(null);
        wc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wcActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Ink Free", 1, 11)); // NOI18N
        delete.setForeground(new java.awt.Color(102, 204, 0));
        delete.setText("delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\lenovo\\Documents\\NetBeansProjects\\moonleaf1-20200125T075433Z-001\\moonleaf1\\Photo\\Icon\\1d74c402551f1f8c794207a9995c4d12.jpg")); // NOI18N

        jLabel10.setFont(new java.awt.Font("Ink Free", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 204, 0));
        jLabel10.setText("Moonleaf Cafe");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moonleaf1/moonleaflogo (Custom) (Custom).jpg"))); // NOI18N

        back.setBackground(new java.awt.Color(0, 0, 0));
        back.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 0));
        back.setText("back");
        back.setBorder(null);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20))
                                .addGap(174, 174, 174)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(wc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(natamilk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ppearl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jelly, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chia, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(207, 207, 207)
                        .addComponent(delete)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(59, 59, 59))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(delete)
                        .addGap(120, 120, 120))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(chia))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jelly))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(ppearl))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(natamilk))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(sc))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel20))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(wc)))
                        .addGap(18, 18, 18)
                        .addComponent(back)
                        .addGap(111, 111, 111))))
        );

        jPanel4.setBackground(new java.awt.Color(153, 204, 0));

        jLabelClose2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabelClose2.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose2.setText("X");
        jLabelClose2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelClose2MouseClicked(evt);
            }
        });

        JLabelMin2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        JLabelMin2.setForeground(new java.awt.Color(255, 255, 255));
        JLabelMin2.setText("_");
        JLabelMin2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JLabelMin2MouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Add-Ons Form");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JLabelMin2)
                .addGap(18, 18, 18)
                .addComponent(jLabelClose2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelClose2)
                            .addComponent(JLabelMin2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        display.setBackground(new java.awt.Color(0, 0, 0));
        display.setColumns(20);
        display.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        display.setForeground(new java.awt.Color(255, 255, 255));
        display.setRows(5);
        display.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Order", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jScrollPane2.setViewportView(display);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        total.setBackground(new java.awt.Color(102, 102, 102));
        total.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(204, 0, 0));
        clear.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("clear");
        clear.setBorder(null);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        addons.setBackground(new java.awt.Color(0, 0, 0));
        addons.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        addons.setForeground(new java.awt.Color(255, 255, 0));
        addons.setText("Add-ons");
        addons.setBorder(null);
        addons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addonsActionPerformed(evt);
            }
        });

        payment.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        payment.setForeground(new java.awt.Color(51, 204, 0));
        payment.setText("payment");
        payment.setBorder(null);
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });

        add1.setBackground(new java.awt.Color(0, 204, 204));
        add1.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        add1.setText("Add");
        add1.setBorder(null);
        add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(total)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(add1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addons, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add1)
                    .addComponent(payment)
                    .addComponent(addons)
                    .addComponent(clear))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        display.replaceSelection("");
    }//GEN-LAST:event_deleteActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
          
    }//GEN-LAST:event_totalActionPerformed

    private void chiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chiaActionPerformed
        // TODO add your handling code here:
            SimpleDateFormat sdf=new SimpleDateFormat ("dd-MMM-yy hh:mm:ss aa"); 
           String datee=sdf.format(new Date()).toString();
       
        
         conn= Moonleaf1.ConnecrDb();
         
        String cs,newline,name,price;
        name="   w/ Chia Seeds";
        price= "25.00";
        newline="\n";
        cs= "    w/ Chia Seeds= P25.00";
        double css;
        css=25.00;
        display.setText(display.getText()+ cs);
        display.append(newline);
        
         
        
        try{
             String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
          Statement stmt= conn.createStatement();
          String sql="UPDATE ORDERED SET ADDONS='Chia Seeds', PRICEADDONS=25.00 WHERE DATEORDERED= to_timestamp('"+content+"')";
          stmt.executeUpdate(sql);
          conn.close();
        } catch (Exception e) {
             
          }
        
        
        
      
       
       
                    
                    //add
       
        atdog=Double.parseDouble(total.getText())+css;
       total.setText(""+atdog);
                    DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        
                  
         
         
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        
        
        System.out.println(name+"                                      "+price);
    }//GEN-LAST:event_chiaActionPerformed

    private void jellyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jellyActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String jl,newline,name,price;
        name="      w/ Grass Jelly/Matcha Jelly";
        price="15.00";
       jl="  w/  Grass Jelly/Matcha Jelly=P15.00";
       newline="\n";
       double jly;
       jly=15.00;
       display.setText(display.getText()+jl);
       display.append(newline);
       
       //add
       atdog = Double.parseDouble(total.getText()) +jly ;
       total.setText(""+atdog);
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
          try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set Addons='Grass/Match Jelly',PRICEADDONS=15.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
               
               
               
                try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        
         System.out.println(name+"                                                      "+price);
    }//GEN-LAST:event_jellyActionPerformed

    private void ppearlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppearlActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String ppp,newline,name,price;
        name="  w/ Pudding/Pearls/White Pearls";
        price= "15.00";
        ppp="  w/ Pudding/Pearls/White Pearls =P15.00";
        newline="\n";
        double pprl=15.00;
        display.setText(display.getText()+ppp);;
        display.append(newline);
        
        //add
        atdog = Double.parseDouble(total.getText()) + pprl;
       total.setText(""+atdog);
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       
         try{
             String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
          Statement stmt= conn.createStatement();
          String sql="UPDATE ORDERED SET ADDONS='Pudding/Pearls/White Pearls', PRICEADDONS=15.00 WHERE DATEORDERED= to_timestamp('"+content+"')";
          stmt.executeUpdate(sql);
          conn.close();
        } catch (Exception e) {
             
          }
       
       
       
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        
         System.out.println(name+"                                    "+price);
    }//GEN-LAST:event_ppearlActionPerformed

    private void natamilkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_natamilkActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String mn,newline,name,price;
        name="   w/ Milk Nata";
        price="15.00";
        mn="   w/ Milk/Nata=P15.00";
        newline="\n";
        double mnata=15.00;
        display.setText(display.getText()+mn);
        display.append(newline);
        
        //add
        atdog = Double.parseDouble(total.getText()) + mnata;
       total.setText(""+atdog);
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
         try{
             String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
          Statement stmt= conn.createStatement();
          String sql="UPDATE ORDERED SET ADDONS='Milk/Nata', PRICEADDONS=15.00 WHERE DATEORDERED= to_timestamp('"+content+"')";
          stmt.executeUpdate(sql);
          conn.close();
        } catch (Exception e) {
             
          }
       
       
       try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                                          "+price);
    }//GEN-LAST:event_natamilkActionPerformed

    private void scActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scActionPerformed
        // TODO add your handling code here
        conn= Moonleaf1.ConnecrDb();
        String scrm,newline,name,price;
        name="  w/ Salted Cream";
        price="30.00";
        scrm="  w/ Salted Cream=P30.00";
        newline="\n";
        double scream=30.00;
        display.setText(display.getText()+scrm);
        display.append(newline);
        
        //add
        atdog = Double.parseDouble(total.getText()) + scream;
       total.setText(""+atdog);
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
         try{
             String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
          Statement stmt= conn.createStatement();
          String sql="UPDATE ORDERED SET ADDONS='Salted Cream', PRICEADDONS=30.00 WHERE DATEORDERED= to_timestamp('"+content+"')";
          stmt.executeUpdate(sql);
          conn.close();
        } catch (Exception e) {
             
          }
       
       
        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                                  "+price);
    }//GEN-LAST:event_scActionPerformed

    private void wcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wcActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String wcrm,newline,name,price;
        name="   w/ Whipped Cream";
        price="20.00";
        wcrm= "  w/ Whipped Cream=P20.00";
        newline="\n";
        display.setText(display.getText()+wcrm);
        display.append(newline);
        double wcream=20.00;
        
        //add
        atdog = Double.parseDouble(total.getText()) + wcream;
       total.setText(""+atdog);
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
          try{
             String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
          Statement stmt= conn.createStatement();
          String sql="UPDATE ORDERED SET ADDONS='Whipped Cream', PRICEADDONS=20.00 WHERE DATEORDERED= to_timestamp('"+content+"')";
          stmt.executeUpdate(sql);
          conn.close();
        } catch (Exception e) {
             
          }
       
       
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
           }
           
            System.out.println(name+"                                       "+price);
    }//GEN-LAST:event_wcActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try {
            String content;
            content=new String(Files.readAllBytes(Paths.get("copy.txt")));
                    display.setText(content);
        } catch (IOException ex) {
            Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
        }
        
          try {
            String content;
            content=new String(Files.readAllBytes(Paths.get("total.txt")));
                    total.setText(content);
        } catch (IOException ex) {
            Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
        }
          
            try {
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
                 
        } catch (IOException ex) {
            Logger.getLogger(addons.class.getName()).log(Level.SEVERE, null, ex);
        }
        
      
        
    }//GEN-LAST:event_formWindowOpened

    private void JLabelMin2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JLabelMin2MouseClicked
        // TODO add your handling code here

        this.setState(javax.swing.JFrame.ICONIFIED);
    }//GEN-LAST:event_JLabelMin2MouseClicked

    private void jLabelClose2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelClose2MouseClicked
        // Close
        System.exit(0);
    }//GEN-LAST:event_jLabelClose2MouseClicked

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf=new SimpleDateFormat ("dd-MMM-yy hh:mm:ss aa");
        String datee=sdf.format(new Date()).toString();
        conn=Moonleaf1.ConnecrDb();

        display.setText("");
        total.setText("0.00");

        try{
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED SET STATUS='CHANGED' WHERE DATEORDERED= to_timestamp('"+content+"')");
            st.executeUpdate("DELETE ORDERED WHERE STATUS='CHANGED'");
            st.executeUpdate("DELETE ORDERED WHERE STATUS='ADD'");
            st.executeUpdate("INSERT INTO ORDERED VALUES ('"+datee+"','','','','','','')");
            conn.close();
            try(PrintWriter writer=new PrintWriter("time.txt", "UTF-8")){
                writer.println(datee);

                writer.close();}
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println("");
            display.setText(display.getText());
            writer.close();
        }

        catch (FileNotFoundException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }

        //clearing totaaaaaalllllll
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println("");
            total.setText(total.getText());
            writer.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        try(PrintWriter writer=new PrintWriter("officialreceipt.txt", "UTF-8")){
            writer.println("                   *Moonleaf Cafe*                     ");
            writer.println("                 "+ datee);
            writer.println("Order"+"                                          "+ "Price");
            writer.close();} catch (FileNotFoundException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clearActionPerformed

    private void addonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addonsActionPerformed
        // TODO add your handling code here:
        addons user=new addons();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_addonsActionPerformed

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        // TODO add your handling code here:
        paymentmoonleaf user=new paymentmoonleaf();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_paymentActionPerformed

    private void add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add1ActionPerformed
        // TODO add your handling code here:
        conn=Moonleaf1.ConnecrDb();
        SimpleDateFormat sdf=new SimpleDateFormat ("dd-MMM-yy hh:mm:ss aa");
        String datee=sdf.format(new Date()).toString();

        try{

            Statement st= conn.createStatement();
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            st.executeUpdate("UPDATE ORDERED SET STATUS='ADD' WHERE DATEORDERED=to_timestamp('"+content+"')");
            st.executeUpdate("INSERT INTO ORDERED "+ "VALUES('"+datee+"','','','','','','')");
            conn.close();
            try(PrintWriter writer=new PrintWriter("time.txt", "UTF-8")){
                writer.println(datee);
                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_add1ActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        frame1 user=new frame1();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addons.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addons().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabelMin2;
    private javax.swing.JButton add1;
    private javax.swing.JButton addons;
    private javax.swing.JButton back;
    private javax.swing.JButton chia;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JTextArea display;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelClose2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jelly;
    private javax.swing.JButton natamilk;
    private javax.swing.JButton payment;
    private javax.swing.JButton ppearl;
    private javax.swing.JButton sc;
    private javax.swing.JTextField total;
    private javax.swing.JButton wc;
    // End of variables declaration//GEN-END:variables
}
