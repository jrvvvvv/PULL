/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package moonleaf1;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;

/**
 *
 * @author lenovo
 */
public class moonleafbasicsize extends javax.swing.JFrame {
     Connection  conn= Moonleaf1.ConnecrDb();
    OraclePreparedStatement pst= null ;
    OracleResultSet rs= null; 
    double atdog;

    /**
     * Creates new form moonleafbasicsize
     */
    public moonleafbasicsize() {
        initComponents();
        Toolkit  toolkit= getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size .height/2 - getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        btr = new javax.swing.JButton();
        btt = new javax.swing.JButton();
        jgtr = new javax.swing.JButton();
        jgtt = new javax.swing.JButton();
        otr = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ott = new javax.swing.JButton();
        back = new javax.swing.JButton();
        addons = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        clear = new javax.swing.JButton();
        total = new javax.swing.JTextField();
        payment = new javax.swing.JButton();
        add1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabelClose = new javax.swing.JLabel();
        JLabelMin = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();

        jButton3.setText("jButton3");

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 204, 0), 3, true));

        btr.setBackground(new java.awt.Color(0, 0, 0));
        btr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        btr.setForeground(new java.awt.Color(255, 255, 255));
        btr.setText("Php 55");
        btr.setBorder(null);
        btr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btrActionPerformed(evt);
            }
        });

        btt.setBackground(new java.awt.Color(0, 0, 0));
        btt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        btt.setForeground(new java.awt.Color(255, 255, 255));
        btt.setText("Php 65");
        btt.setBorder(null);
        btt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttActionPerformed(evt);
            }
        });

        jgtr.setBackground(new java.awt.Color(0, 0, 0));
        jgtr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        jgtr.setForeground(new java.awt.Color(255, 255, 255));
        jgtr.setText("Php 55");
        jgtr.setBorder(null);
        jgtr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jgtrActionPerformed(evt);
            }
        });

        jgtt.setBackground(new java.awt.Color(0, 0, 0));
        jgtt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        jgtt.setForeground(new java.awt.Color(255, 255, 255));
        jgtt.setText("Php 65");
        jgtt.setBorder(null);
        jgtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jgttActionPerformed(evt);
            }
        });

        otr.setBackground(new java.awt.Color(0, 0, 0));
        otr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        otr.setForeground(new java.awt.Color(255, 255, 255));
        otr.setText("Php 70");
        otr.setBorder(null);
        otr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otrActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 153, 153));
        jLabel9.setText("R");

        jLabel10.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 153, 153));
        jLabel10.setText("T");

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel4.setText("Jasmine Green Tea");

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel5.setText("Black Tea");

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel6.setText("Oolong Tea");

        ott.setBackground(new java.awt.Color(0, 0, 0));
        ott.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        ott.setForeground(new java.awt.Color(255, 255, 255));
        ott.setText("Php 80");
        ott.setBorder(null);
        ott.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ottActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(0, 0, 0));
        back.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 0));
        back.setText("back");
        back.setBorder(null);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        addons.setBackground(new java.awt.Color(0, 0, 0));
        addons.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        addons.setForeground(new java.awt.Color(255, 255, 0));
        addons.setText("Add-ons");
        addons.setBorder(null);
        addons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addonsActionPerformed(evt);
            }
        });

        display.setBackground(new java.awt.Color(51, 51, 51));
        display.setColumns(20);
        display.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        display.setForeground(new java.awt.Color(255, 255, 255));
        display.setRows(5);
        display.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Order", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jScrollPane3.setViewportView(display);

        clear.setBackground(new java.awt.Color(204, 0, 0));
        clear.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("clear");
        clear.setBorder(null);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        total.setBackground(new java.awt.Color(102, 102, 102));
        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 204, 0), 2), "Total", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 10), new java.awt.Color(255, 255, 255))); // NOI18N
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        payment.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        payment.setForeground(new java.awt.Color(51, 204, 0));
        payment.setText("payment");
        payment.setBorder(null);
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });

        add1.setBackground(new java.awt.Color(0, 204, 204));
        add1.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        add1.setText("Add");
        add1.setBorder(null);
        add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 204, 0));

        jLabelClose.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabelClose.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose.setText("X");
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
        });

        JLabelMin.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        JLabelMin.setForeground(new java.awt.Color(255, 255, 255));
        JLabelMin.setText("_");
        JLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JLabelMinMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Basic Form");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 681, Short.MAX_VALUE)
                .addComponent(JLabelMin)
                .addGap(18, 18, 18)
                .addComponent(jLabelClose)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelClose)
                            .addComponent(JLabelMin))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jLabel8.setFont(new java.awt.Font("Ink Free", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 204, 0));
        jLabel8.setText("Moonleaf Cafe");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moonleaf1/moonleaflogo (Custom) (Custom).jpg"))); // NOI18N

        jLabel20.setIcon(new javax.swing.ImageIcon("C:\\Users\\lenovo\\Documents\\NetBeansProjects\\moonleaf1-20200125T075433Z-001\\moonleaf1\\Photo\\Menu Icon\\Basic.jpg")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(add1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addons, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(113, 113, 113)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jgtr, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(btr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(otr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ott, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(jgtt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                    .addComponent(total)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel8)
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)))
                            .addComponent(jLabel11))
                        .addGap(11, 11, 11)
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btr)
                            .addComponent(btt)
                            .addComponent(jLabel5))
                        .addGap(68, 68, 68)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jgtr)
                            .addComponent(jgtt)
                            .addComponent(jLabel4))
                        .addGap(74, 74, 74)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(ott)
                            .addComponent(otr, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add1)
                    .addComponent(addons)
                    .addComponent(clear)
                    .addComponent(back)
                    .addComponent(payment))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        frame1 user=new frame1();
            user.setVisible(true);
            user.setLocationRelativeTo(null);
            this.dispose(); 
    }//GEN-LAST:event_backActionPerformed

    private void addonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addonsActionPerformed
        // TODO add your handling code here:
        addons user=new addons();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_addonsActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
         SimpleDateFormat sdf=new SimpleDateFormat ("dd-MMM-yy hh:mm:ss aa"); 
           String datee=sdf.format(new Date()).toString();
           conn=Moonleaf1.ConnecrDb();
       
        display.setText("");
                total.setText("0.00");
                
              try{
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED SET STATUS='CHANGED' WHERE DATEORDERED= to_timestamp('"+content+"')");
            st.executeUpdate("DELETE ORDERED WHERE STATUS='CHANGED'");
            st.executeUpdate("DELETE ORDERED WHERE STATUS='ADD'");
            st.executeUpdate("INSERT INTO ORDERED VALUES ('"+datee+"','','','','','','')");
            conn.close();
             try(PrintWriter writer=new PrintWriter("time.txt", "UTF-8")){
            writer.println(datee);
            
            writer.close();}
        } catch (Exception e) {
           
         }
                
                 try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println("");
            display.setText(display.getText());
            writer.close();
             } 
             
             catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
         
         //clearing totaaaaaalllllll
             try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println("");
            total.setText(total.getText());
            writer.close();
             } catch (FileNotFoundException ex) { 
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } 
             
              DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
              LocalDateTime now = LocalDateTime.now(); 
             try(PrintWriter writer=new PrintWriter("officialreceipt.txt", "UTF-8")){
            writer.println("                   *Moonleaf Cafe*                     ");
           writer.println("                 "+ datee);
           writer.println("Order"+"                                          "+ "Price");
           writer.close();} catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
    }//GEN-LAST:event_clearActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    private void btrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String btear,newline,name,price;
        name="Black Tea(Regular)";
        price="55.00";
        double blacktr=55.00;
        btear="Black Tea(Regular)=P55.00";
        newline="\n";
        display.setText(display.getText()+btear);
        display.append(newline);
        
           atdog = Double.parseDouble(total.getText()) + blacktr;
       total.setText(""+atdog);
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       
      try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Black Tea',SIZEE='Regular',PRICEORDER=55.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_btrActionPerformed

    private void bttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String bteat,newline,name,price;
        name="Black Tea(Tall)";
        price="65.00";
        double blacktt=65.00;
        bteat="Black Tea(Tall)=P65.00";
        newline="\n";
        display.setText(display.getText()+bteat);
        display.append(newline);
        
           atdog = Double.parseDouble(total.getText()) + blacktt;
       total.setText(""+atdog);
         DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
      try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Black Tea',SIZEE='Tall',PRICEORDER=65.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_bttActionPerformed

    private void jgtrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jgtrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String jgtear,newline,name,price;
        name="Jasmine Green Tea(Regular)";
        price="55.00";
        double jasminegtr=55.00;
        jgtear="Jasmine Green Tea(Regular)=P55.00";
        newline="\n";
        display.setText(display.getText()+jgtear);
        display.append(newline);
        
           atdog = Double.parseDouble(total.getText()) + jasminegtr;
       total.setText(""+atdog);
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
     try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Jasmine Green Tea',SIZEE='Regular',PRICEORDER=55.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
       
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_jgtrActionPerformed

    private void jgttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jgttActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String jgteat,newline,name,price;
        name="Jasmine Green Tea(Tall)";
        price="65.00";
        double jasminegtt=65.00;
        jgteat="Jasmine Green Tea(Tall)=P65.00";
        newline="\n";
        display.setText(display.getText()+jgteat);
        display.append(newline);
        
           atdog = Double.parseDouble(total.getText()) + jasminegtt;
       total.setText(""+atdog);
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
      try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Jasmine Green Tea',SIZEE='Tall',PRICEORDER=65.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_jgttActionPerformed

    private void otrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String otear,newline,name,price;
        name="Oolong Tea(Regular)";
        price="70.00";
        double oolongtr=70.00;
        otear="Oolong Tea(Regular)=P70.00";
        newline="\n";
        display.setText(display.getText()+otear);
        display.append(newline);
        
           atdog = Double.parseDouble(total.getText()) + oolongtr;
       total.setText(""+atdog);
         DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Oolong Tea',SIZEE='Regular',PRICEORDER=70.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_otrActionPerformed

    private void ottActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ottActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String oteat,newline,name,price;
        name="Oolong Tea(Tall)";
        price="80.00";
        double oolongtt=80.00;
        oteat="Oolong Tea(Tall)=P80.00";
        newline="\n";
        display.setText(display.getText()+oteat);
        display.append(newline);
        
           atdog = Double.parseDouble(total.getText()) + oolongtt;
       total.setText(""+atdog);
         DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
      try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Oolong Tea',SIZEE='Tall',PRICEORDER=80.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_ottActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
           try {
            String content;
            content=new String(Files.readAllBytes(Paths.get("copy.txt")));
                    display.setText(content);
        } catch (IOException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }
        
          try {
            String content;
            content=new String(Files.readAllBytes(Paths.get("total.txt")));
                    total.setText(content);
        } catch (IOException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        // TODO add your handling code here:
         paymentmoonleaf user=new paymentmoonleaf();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_paymentActionPerformed

    private void add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add1ActionPerformed
        // TODO add your handling code here:
        conn=Moonleaf1.ConnecrDb();
        SimpleDateFormat sdf=new SimpleDateFormat ("dd-MMM-yy hh:mm:ss aa");
        String datee=sdf.format(new Date()).toString();

        try{

            Statement st= conn.createStatement();
             String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            st.executeUpdate("UPDATE ORDERED SET STATUS='ADD' WHERE DATEORDERED=to_timestamp('"+content+"')");
            st.executeUpdate("INSERT INTO ORDERED "+ "VALUES('"+datee+"','','','','','','')");
            conn.close();
            try(PrintWriter writer=new PrintWriter("time.txt", "UTF-8")){
                writer.println(datee);
                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception e) {

        }

    }//GEN-LAST:event_add1ActionPerformed

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked
        // Close
        System.exit(0);
    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void JLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JLabelMinMouseClicked
        // TODO add your handling code here

        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_JLabelMinMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(moonleafbasicsize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(moonleafbasicsize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(moonleafbasicsize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(moonleafbasicsize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new moonleafbasicsize().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabelMin;
    private javax.swing.JButton add1;
    private javax.swing.JButton addons;
    private javax.swing.JButton back;
    private javax.swing.JButton btr;
    private javax.swing.JButton btt;
    private javax.swing.JButton clear;
    private javax.swing.JTextArea display;
    private javax.swing.JButton jButton3;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jgtr;
    private javax.swing.JButton jgtt;
    private javax.swing.JButton otr;
    private javax.swing.JButton ott;
    private javax.swing.JButton payment;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables
}
