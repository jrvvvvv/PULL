/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package moonleaf1;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;

/**
 *
 * @author lenovo
 */
public class lemonademoonleaf extends javax.swing.JFrame {
     Connection  conn= Moonleaf1.ConnecrDb();
    OraclePreparedStatement pst= null ;
    OracleResultSet rs= null; 
    double atdog;
    /**
     * Creates new form addonsmoonleaf
     */
    public lemonademoonleaf() {
        initComponents();
       
        Toolkit  toolkit= getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size .height/2 - getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        ablr = new javax.swing.JButton();
        ablt = new javax.swing.JButton();
        clr = new javax.swing.JButton();
        clt = new javax.swing.JButton();
        hlr = new javax.swing.JButton();
        hlt = new javax.swing.JButton();
        lr = new javax.swing.JButton();
        llt = new javax.swing.JButton();
        plr = new javax.swing.JButton();
        plt = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        total = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabelClose4 = new javax.swing.JLabel();
        JLabelMin4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        clear = new javax.swing.JButton();
        addons = new javax.swing.JButton();
        add1 = new javax.swing.JButton();
        payment = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 204, 0), 3, true));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moonleaf1/moonleaflogo (Custom) (Custom).jpg"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Ink Free", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 204, 0));
        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\lenovo\\Documents\\NetBeansProjects\\moonleaf1-20200125T075433Z-001\\moonleaf1\\Photo\\Menu Icon\\Lemonade.jpg")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("R");

        jLabel6.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("T");

        jLabel15.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel15.setText("Acai Berry Lemonade");

        jLabel16.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel16.setText("Charcoal Lemonade");

        jLabel17.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel17.setText("Honeydew Lemonade");

        jLabel18.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel18.setText("Lemonade");

        jLabel19.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel19.setText("Pomegranate Lemonade");

        ablr.setBackground(new java.awt.Color(0, 0, 0));
        ablr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        ablr.setForeground(new java.awt.Color(255, 255, 255));
        ablr.setText("Php 75");
        ablr.setBorder(null);
        ablr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ablrActionPerformed(evt);
            }
        });

        ablt.setBackground(new java.awt.Color(0, 0, 0));
        ablt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        ablt.setForeground(new java.awt.Color(255, 255, 255));
        ablt.setText("Php 85");
        ablt.setBorder(null);
        ablt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abltActionPerformed(evt);
            }
        });

        clr.setBackground(new java.awt.Color(0, 0, 0));
        clr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        clr.setForeground(new java.awt.Color(255, 255, 255));
        clr.setText("Php 95");
        clr.setBorder(null);
        clr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrActionPerformed(evt);
            }
        });

        clt.setBackground(new java.awt.Color(0, 0, 0));
        clt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        clt.setForeground(new java.awt.Color(255, 255, 255));
        clt.setText("Php 105");
        clt.setBorder(null);
        clt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cltActionPerformed(evt);
            }
        });

        hlr.setBackground(new java.awt.Color(0, 0, 0));
        hlr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        hlr.setForeground(new java.awt.Color(255, 255, 255));
        hlr.setText("Php 75");
        hlr.setBorder(null);
        hlr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hlrActionPerformed(evt);
            }
        });

        hlt.setBackground(new java.awt.Color(0, 0, 0));
        hlt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        hlt.setForeground(new java.awt.Color(255, 255, 255));
        hlt.setText("Php 85");
        hlt.setBorder(null);
        hlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hltActionPerformed(evt);
            }
        });

        lr.setBackground(new java.awt.Color(0, 0, 0));
        lr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        lr.setForeground(new java.awt.Color(255, 255, 255));
        lr.setText("Php 65");
        lr.setBorder(null);
        lr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lrActionPerformed(evt);
            }
        });

        llt.setBackground(new java.awt.Color(0, 0, 0));
        llt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        llt.setForeground(new java.awt.Color(255, 255, 255));
        llt.setText("Php 75");
        llt.setBorder(null);
        llt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lltActionPerformed(evt);
            }
        });

        plr.setBackground(new java.awt.Color(0, 0, 0));
        plr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        plr.setForeground(new java.awt.Color(255, 255, 255));
        plr.setText("Php 75");
        plr.setBorder(null);
        plr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plrActionPerformed(evt);
            }
        });

        plt.setBackground(new java.awt.Color(0, 0, 0));
        plt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        plt.setForeground(new java.awt.Color(255, 255, 255));
        plt.setText("Php 85");
        plt.setBorder(null);
        plt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pltActionPerformed(evt);
            }
        });

        display.setBackground(new java.awt.Color(0, 0, 0));
        display.setColumns(20);
        display.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        display.setForeground(new java.awt.Color(255, 255, 255));
        display.setRows(5);
        display.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Order", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jScrollPane3.setViewportView(display);

        total.setBackground(new java.awt.Color(51, 51, 51));
        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(153, 204, 0));

        jLabelClose4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabelClose4.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose4.setText("X");
        jLabelClose4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelClose4MouseClicked(evt);
            }
        });

        JLabelMin4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        JLabelMin4.setForeground(new java.awt.Color(255, 255, 255));
        JLabelMin4.setText("_");
        JLabelMin4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JLabelMin4MouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Lemonade Form");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 281, Short.MAX_VALUE)
                .addComponent(JLabelMin4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelClose4)
                .addGap(8, 8, 8))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JLabelMin4)
                            .addComponent(jLabelClose4))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        clear.setBackground(new java.awt.Color(204, 0, 0));
        clear.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("clear");
        clear.setBorder(null);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        addons.setBackground(new java.awt.Color(0, 0, 0));
        addons.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        addons.setForeground(new java.awt.Color(255, 255, 0));
        addons.setText("Add-ons");
        addons.setBorder(null);
        addons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addonsActionPerformed(evt);
            }
        });

        add1.setBackground(new java.awt.Color(0, 204, 204));
        add1.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        add1.setText("Add");
        add1.setBorder(null);
        add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add1ActionPerformed(evt);
            }
        });

        payment.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        payment.setForeground(new java.awt.Color(51, 204, 0));
        payment.setText("payment");
        payment.setBorder(null);
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(0, 0, 0));
        back.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 0));
        back.setText("back");
        back.setBorder(null);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Ink Free", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 204, 0));
        jLabel12.setText("Moonleaf Cafe");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel18))
                                        .addGap(62, 62, 62)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lr, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                            .addComponent(plr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel15)
                                            .addComponent(jLabel17))
                                        .addGap(79, 79, 79)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(hlr, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ablr, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(clr, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(plt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(hlt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(clt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ablt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(llt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(156, 156, 156)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12))
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(add1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(addons, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(111, 111, 111)
                            .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(total, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(32, 32, 32)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(ablr)
                            .addComponent(ablt))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(clr)
                            .addComponent(clt))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(hlr)
                            .addComponent(hlt))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(lr)
                            .addComponent(llt))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(plr)
                            .addComponent(plt))
                        .addGap(41, 41, 41)))
                .addGap(0, 0, 0)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add1)
                    .addComponent(addons)
                    .addComponent(payment)
                    .addComponent(clear)
                    .addComponent(back))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lrActionPerformed
        // TODO add your handling code here:\
        
        conn= Moonleaf1.ConnecrDb();
        String lemonr,newline;
        double lemonader=65.00;
        lemonr="Lemonade(Regular)=P65.00";
        newline="\n";
        display.setText(display.getText()+lemonr);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+lemonader;
       total.setText(""+atdog); 
       
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       
       
       try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Lemonade',SIZEE='Regular',PRICEORDER=65.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
       
        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(Special.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(Special.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(Special.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(Special.class.getName()).log(Level.SEVERE, null, ex);
           }
    }//GEN-LAST:event_lrActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    private void ablrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ablrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String ablemonr,newline,name,price;
        name="Acai Berry Lemonade(Regular)";
        price="75.00";
        double acaiblr=75.00;
        ablemonr="Acai Berry Lemonade(Regular)=P75.00";
        newline="\n";
        display.setText(display.getText()+ablemonr);
        display.append(newline);
        
        atdog=Double.parseDouble(total.getText())+acaiblr;
       total.setText(""+atdog); 
       
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       
       try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Acai Berry Lemonade',SIZEE='Regular',PRICEORDER=75.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
       
       try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
        
    }//GEN-LAST:event_ablrActionPerformed

    private void abltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abltActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
         String ablemont,newline,name,price;
         name="Acai Berry Lemonade(Tall)";
         price="85.00";
         double acaiblt=85.00;
        ablemont="Acai Berry Lemonade(Tall)=P85.00";
        newline="\n";
        display.setText(display.getText()+ablemont);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+acaiblt;
       total.setText(""+atdog); 
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        
       try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Acai Berry Lemonade',SIZEE='Tall',PRICEORDER=85.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_abltActionPerformed

    private void clrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String clemonr,newline,name,price;
        name="Charcoal Lemonade(Regular)";
        price="95.00";
        double charcoallr=95.00;
        clemonr="Charcoal Lemonade(Regular)=P95.00";
        newline="\n";
        display.setText(display.getText()+clemonr);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+charcoallr;
       total.setText(""+atdog); 
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       
       try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Charcoal Lemonade',SIZEE='Regular',PRICEORDER=95.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_clrActionPerformed

    private void cltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cltActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String clemont,newline,name,price;
        name="Charcoal Lemonade(Tall)";
        price="105.00";
        double charcoallt=105.00;
        clemont="Charcoal Lemonade(Tall)=P105.00";
        newline="\n";
        display.setText(display.getText()+clemont);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+charcoallt;
       total.setText(""+atdog); 
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       
      try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Charcoal Lemonade',SIZEE='Tall',PRICEORDER=105.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_cltActionPerformed

    private void hlrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hlrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String hlemonr,newline,name,price;
        name="Honeydew Lemonade(Regular)";
        price="75.00";
        double honeylr=75.00;
        hlemonr="Honeydew Lemonade(Regular)=P75.00";
        newline="\n";
        display.setText(display.getText()+hlemonr);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+honeylr;
       total.setText(""+atdog); 
       
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       
     try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Honeydew Lemonade',SIZEE='Regular',PRICEORDER=75.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_hlrActionPerformed

    private void hltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hltActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String hlemont,newline,name,price;
        name="Honeydew Lemonade(Tall)";
        price="85.00";
        double honeylt=85.00;
        hlemont="Honeydew Lemonade(Tall)=P85.00";
        newline="\n";
        display.setText(display.getText()+hlemont);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+honeylt;
       total.setText(""+atdog); 
       
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       
        try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Honeydew Lemonade',SIZEE='Tall',PRICEORDER=85.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_hltActionPerformed

    private void lltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lltActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String lemont,newline,name,price;
        name="Lemonade(Tall)";
        price="75.00";
        double lemonadet=75.00;
        lemont="Lemonade(Tall)=P75.00";
        newline="\n";
        display.setText(display.getText()+lemont);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+lemonadet;
       total.setText(""+atdog); 
       
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       
       try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Lemonade',SIZEE='Tall',PRICEORDER=75.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
       
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_lltActionPerformed

    private void plrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String plemonr,newline,name,price;
        name="Pomegranate Lemonade(Regular)";
        price="75.00";
        double pomelr=75.00;
        plemonr="Pomegranate Lemonade(Regular)=P75.00";
        newline="\n";
        display.setText(display.getText()+plemonr);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+pomelr;
       total.setText(""+atdog); 
       
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       
      try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Pomegranate Lemonade',SIZEE='Regular',PRICEORDER=75.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_plrActionPerformed

    private void pltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pltActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
         String plemont,newline,name,price;
         name="Pomegranate Lemonade(Tall)";
         price="85.00";
         double pomelt=85.00;
        plemont="Pomegranate Lemonade(Tall)=P85.00";
        newline="\n";
        display.setText(display.getText()+plemont);
        display.append(newline);
        
         atdog=Double.parseDouble(total.getText())+pomelt;
       total.setText(""+atdog); 
        DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
       
        try{
             
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                    + "set PROD='Pomegranate Lemonade',SIZEE='Tall',PRICEORDER=85.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {
           
         }
        
         try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();
            
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           } catch (UnsupportedEncodingException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
               Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
           }
        
         System.out.println(name+"                    "+price);
    }//GEN-LAST:event_pltActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
           try {
            String content;
            content=new String(Files.readAllBytes(Paths.get("copy.txt")));
                    display.setText(content);
        } catch (IOException ex) {
            Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }
        
          try {
            String content;
            content=new String(Files.readAllBytes(Paths.get("total.txt")));
                    total.setText(content);
        } catch (IOException ex) {
            Logger.getLogger(lemonademoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_formWindowOpened

    private void jLabelClose4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelClose4MouseClicked
        // Close
        System.exit(0);
    }//GEN-LAST:event_jLabelClose4MouseClicked

    private void JLabelMin4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JLabelMin4MouseClicked
        // TODO add your handling code here

        this.setState(javax.swing.JFrame.ICONIFIED);
    }//GEN-LAST:event_JLabelMin4MouseClicked

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf=new SimpleDateFormat ("dd-MMM-yy hh:mm:ss aa");
        String datee=sdf.format(new Date()).toString();
        conn=Moonleaf1.ConnecrDb();

        display.setText("");
        total.setText("0.00");

        try{
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED SET STATUS='CHANGED' WHERE DATEORDERED= to_timestamp('"+content+"')");
            st.executeUpdate("DELETE ORDERED WHERE STATUS='CHANGED'");
            st.executeUpdate("DELETE ORDERED WHERE STATUS='ADD'");
            st.executeUpdate("INSERT INTO ORDERED VALUES ('"+datee+"','','','','','','')");
            conn.close();
            try(PrintWriter writer=new PrintWriter("time.txt", "UTF-8")){
                writer.println(datee);

                writer.close();}
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println("");
            display.setText(display.getText());
            writer.close();
        }

        catch (FileNotFoundException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }

        //clearing totaaaaaalllllll
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println("");
            total.setText(total.getText());
            writer.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        try(PrintWriter writer=new PrintWriter("officialreceipt.txt", "UTF-8")){
            writer.println("                   *Moonleaf Cafe*                     ");
            writer.println("                 "+ datee);
            writer.println("Order"+"                                          "+ "Price");
            writer.close();} catch (FileNotFoundException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clearActionPerformed

    private void addonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addonsActionPerformed
        // TODO add your handling code here:
        addons user=new addons();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_addonsActionPerformed

    private void add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add1ActionPerformed
        // TODO add your handling code here:
        conn=Moonleaf1.ConnecrDb();
        SimpleDateFormat sdf=new SimpleDateFormat ("dd-MMM-yy hh:mm:ss aa");
        String datee=sdf.format(new Date()).toString();

        try{

            Statement st= conn.createStatement();
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            st.executeUpdate("UPDATE ORDERED SET STATUS='ADD' WHERE DATEORDERED=to_timestamp('"+content+"')");
            st.executeUpdate("INSERT INTO ORDERED "+ "VALUES('"+datee+"','','','','','','')");
            conn.close();
            try(PrintWriter writer=new PrintWriter("time.txt", "UTF-8")){
                writer.println(datee);
                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_add1ActionPerformed

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        // TODO add your handling code here:
        paymentmoonleaf user=new paymentmoonleaf();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_paymentActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        frame1 user=new frame1();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(lemonademoonleaf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(lemonademoonleaf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(lemonademoonleaf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(lemonademoonleaf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new lemonademoonleaf().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabelMin4;
    private javax.swing.JButton ablr;
    private javax.swing.JButton ablt;
    private javax.swing.JButton add1;
    private javax.swing.JButton addons;
    private javax.swing.JButton back;
    private javax.swing.JButton clear;
    private javax.swing.JButton clr;
    private javax.swing.JButton clt;
    private javax.swing.JTextArea display;
    private javax.swing.JButton hlr;
    private javax.swing.JButton hlt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelClose4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton llt;
    private javax.swing.JButton lr;
    private javax.swing.JButton payment;
    private javax.swing.JButton plr;
    private javax.swing.JButton plt;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables
}
