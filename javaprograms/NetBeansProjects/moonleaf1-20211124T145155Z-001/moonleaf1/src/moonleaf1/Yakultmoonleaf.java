/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package moonleaf1;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import oracle.jdbc.OraclePreparedStatement;
import oracle.jdbc.OracleResultSet;

/**
 *
 * @author lenovo
 */
public class Yakultmoonleaf extends javax.swing.JFrame {
     Connection  conn= Moonleaf1.ConnecrDb();
    OraclePreparedStatement pst= null ;
    OracleResultSet rs= null; 


    /**
     * Creates new form Yakultmoonleaf
     */
    double atdog;
    public Yakultmoonleaf() {
        initComponents();
        Toolkit  toolkit= getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size .height/2 - getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lyr = new javax.swing.JButton();
        lyt = new javax.swing.JButton();
        pfyr = new javax.swing.JButton();
        pfyt = new javax.swing.JButton();
        pyr = new javax.swing.JButton();
        pyt = new javax.swing.JButton();
        syr = new javax.swing.JButton();
        syt = new javax.swing.JButton();
        yjtr = new javax.swing.JButton();
        yjtt = new javax.swing.JButton();
        ymtr = new javax.swing.JButton();
        ymtt = new javax.swing.JButton();
        ymtmsr = new javax.swing.JButton();
        ymtmst = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        total = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabelClose2 = new javax.swing.JLabel();
        JLabelMin2 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        add1 = new javax.swing.JButton();
        addons = new javax.swing.JButton();
        payment = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 204, 0), 3, true));

        jLabel2.setFont(new java.awt.Font("Ink Free", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 204, 0));
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\lenovo\\Documents\\NetBeansProjects\\moonleaf1-20200125T075433Z-001\\moonleaf1\\Photo\\Menu Icon\\Yakult.jpg")); // NOI18N

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel8.setText("Lychee Yakult");

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel9.setText("PassionFruit Yakult");

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel10.setText("Peach Yakult");

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel11.setText("Strawberry Yakult");

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel12.setText("Yakult Jasmine Tea");

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel13.setText("Yogurt Milk Tea");

        jLabel3.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("R");

        jLabel4.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("T");

        jLabel5.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("T");

        jLabel6.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("R");

        lyr.setBackground(new java.awt.Color(255, 204, 204));
        lyr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        lyr.setText("Php 95");
        lyr.setBorder(null);
        lyr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lyrActionPerformed(evt);
            }
        });

        lyt.setBackground(new java.awt.Color(255, 204, 204));
        lyt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        lyt.setText("Php 105");
        lyt.setBorder(null);
        lyt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lytActionPerformed(evt);
            }
        });

        pfyr.setBackground(new java.awt.Color(255, 204, 204));
        pfyr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        pfyr.setText("Php 95");
        pfyr.setBorder(null);
        pfyr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pfyrActionPerformed(evt);
            }
        });

        pfyt.setBackground(new java.awt.Color(255, 204, 204));
        pfyt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        pfyt.setText("Php 105");
        pfyt.setBorder(null);
        pfyt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pfytActionPerformed(evt);
            }
        });

        pyr.setBackground(new java.awt.Color(255, 204, 204));
        pyr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        pyr.setText("Php 95");
        pyr.setBorder(null);
        pyr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pyrActionPerformed(evt);
            }
        });

        pyt.setBackground(new java.awt.Color(255, 204, 204));
        pyt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        pyt.setText("Php 105");
        pyt.setBorder(null);
        pyt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pytActionPerformed(evt);
            }
        });

        syr.setBackground(new java.awt.Color(255, 204, 204));
        syr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        syr.setText("Php 95");
        syr.setBorder(null);
        syr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syrActionPerformed(evt);
            }
        });

        syt.setBackground(new java.awt.Color(255, 204, 204));
        syt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        syt.setText("Php 105");
        syt.setBorder(null);
        syt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sytActionPerformed(evt);
            }
        });

        yjtr.setBackground(new java.awt.Color(255, 204, 204));
        yjtr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        yjtr.setText("Php 85");
        yjtr.setBorder(null);
        yjtr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yjtrActionPerformed(evt);
            }
        });

        yjtt.setBackground(new java.awt.Color(255, 204, 204));
        yjtt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        yjtt.setText("Php 95");
        yjtt.setBorder(null);
        yjtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yjttActionPerformed(evt);
            }
        });

        ymtr.setBackground(new java.awt.Color(255, 204, 204));
        ymtr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        ymtr.setText("Php 95");
        ymtr.setBorder(null);
        ymtr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ymtrActionPerformed(evt);
            }
        });

        ymtt.setBackground(new java.awt.Color(255, 204, 204));
        ymtt.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        ymtt.setText("Php 105");
        ymtt.setBorder(null);
        ymtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ymttActionPerformed(evt);
            }
        });

        ymtmsr.setBackground(new java.awt.Color(255, 204, 204));
        ymtmsr.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        ymtmsr.setText("Php 130");
        ymtmsr.setBorder(null);
        ymtmsr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ymtmsrActionPerformed(evt);
            }
        });

        ymtmst.setBackground(new java.awt.Color(255, 204, 204));
        ymtmst.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        ymtmst.setText("Php 140");
        ymtmst.setBorder(null);
        ymtmst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ymtmstActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 204, 0));
        jLabel16.setText("Milkslush");

        display.setBackground(new java.awt.Color(0, 0, 0));
        display.setColumns(20);
        display.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        display.setForeground(new java.awt.Color(255, 255, 255));
        display.setRows(5);
        jScrollPane2.setViewportView(display);

        total.setBackground(new java.awt.Color(51, 51, 51));
        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(153, 204, 0));

        jLabelClose2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabelClose2.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose2.setText("X");
        jLabelClose2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelClose2MouseClicked(evt);
            }
        });

        JLabelMin2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        JLabelMin2.setForeground(new java.awt.Color(255, 255, 255));
        JLabelMin2.setText("_");
        JLabelMin2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JLabelMin2MouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Yakult Form");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JLabelMin2)
                .addGap(18, 18, 18)
                .addComponent(jLabelClose2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelClose2)
                            .addComponent(JLabelMin2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moonleaf1/moonleaflogo (Custom) (Custom).jpg"))); // NOI18N

        jLabel15.setFont(new java.awt.Font("Ink Free", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(153, 204, 0));
        jLabel15.setText("Moonleaf Cafe");

        add1.setBackground(new java.awt.Color(0, 204, 204));
        add1.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        add1.setText("Add");
        add1.setBorder(null);
        add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add1ActionPerformed(evt);
            }
        });

        addons.setBackground(new java.awt.Color(0, 0, 0));
        addons.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        addons.setForeground(new java.awt.Color(255, 255, 0));
        addons.setText("Add-ons");
        addons.setBorder(null);
        addons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addonsActionPerformed(evt);
            }
        });

        payment.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        payment.setForeground(new java.awt.Color(51, 204, 0));
        payment.setText("payment");
        payment.setBorder(null);
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(204, 0, 0));
        clear.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("clear");
        clear.setBorder(null);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(0, 0, 0));
        back.setFont(new java.awt.Font("Ink Free", 1, 14)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 0));
        back.setText("back");
        back.setBorder(null);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel11)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(syr, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel10)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(pyr, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel8)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lyr, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addGap(0, 0, Short.MAX_VALUE)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(yjtr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(ymtr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel9))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(pfyr, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(59, 59, 59)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(pfyt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lyt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(ymtt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                                    .addComponent(syt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(yjtt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(pyt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addGap(42, 42, 42)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                    .addGap(2, 2, 2)
                                                    .addComponent(ymtmsr, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(ymtmst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGap(10, 10, 10))
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(12, 12, 12)
                                                        .addComponent(jLabel16))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(65, 65, 65)
                                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(48, 48, 48)
                                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel12)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                            .addComponent(jLabel13)
                                                            .addGap(256, 256, 256))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(92, 92, 92)))
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(237, 237, 237)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel15)
                                        .addGap(190, 190, 190)))))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(add1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addons, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel15))
                            .addComponent(jLabel1))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(lyt)
                                    .addComponent(lyr))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel9))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(pfyr))))
                            .addComponent(pfyt))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(pyr))
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(syt)
                                        .addComponent(syr)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(yjtt)
                                    .addComponent(yjtr)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(pyt)
                                .addGap(102, 102, 102)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ymtr)
                                    .addComponent(jLabel13)
                                    .addComponent(ymtt)
                                    .addComponent(ymtmsr)
                                    .addComponent(ymtmst)))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear)
                    .addComponent(add1)
                    .addComponent(addons)
                    .addComponent(payment)
                    .addComponent(back))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
          try {
            String content;
            content=new String(Files.readAllBytes(Paths.get("copy.txt")));
                    display.setText(content);
        } catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }
        
          try {
            String content;
            content=new String(Files.readAllBytes(Paths.get("total.txt")));
                    total.setText(content);
        } catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void ymtmstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ymtmstActionPerformed
        // TODO add your handling code here
        conn= Moonleaf1.ConnecrDb();
        String ymtmslusht,newline,name,price;
        name="Yogurt Milk Slush(Tall)";
        price="140.00";
        double ymtmilkst=140.00;
        ymtmslusht="Yogurt Milk Tea(Milkslush Tall)=P140.00";
        newline="\n";
        display.setText(display.getText()+ymtmslusht);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+ymtmilkst;
        total.setText(""+atdog);
             DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Yogurt Milk Slush',SIZEE='Tall',PRICEORDER=140.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Special.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_ymtmstActionPerformed

    private void ymtmsrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ymtmsrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String ymtmslushr,newline,name,price;
        name="Yogurt Milk Slush(Regular)";
        price="130.00";
        double ymtmilksr=130.00;
        ymtmslushr="Yogurt Milk Tea(Milkslush Regular)=P130.00";
        newline="\n";
        display.setText(display.getText()+ymtmslushr);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+ymtmilksr;
        total.setText(""+atdog);
             DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Yogurt Milk Slush',SIZEE='Regular',PRICEORDER=130.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_ymtmsrActionPerformed

    private void ymttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ymttActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String ymteat,newline,name,price;
        name="Yogurt Milk Tea(Tall)";
        price="105.00";
        double yogurtmtt=105.00;
        ymteat="Yogurt Milk Tea(Tall)=P105.00";
        newline="\n";
        display.setText(display.getText()+ymteat);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+yogurtmtt;
        total.setText(""+atdog);
                DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Yogurt Milk Tea',SIZEE='Tall',PRICEORDER=105.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_ymttActionPerformed

    private void ymtrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ymtrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String ymtear,newline,name,price;
        double yogurtmtr=95.00;
        name="Yogurt Milk Tea(Regular)";
        price="95.00";
        ymtear="Yogurt Milk Tea(Regular)=P95.00";
        newline="\n";
        display.setText(display.getText()+ymtear);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+yogurtmtr;
        total.setText(""+atdog);
             DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Yogurt Milk Tea',SIZEE='Regular',PRICEORDER=95.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_ymtrActionPerformed

    private void yjttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yjttActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String yjteat,newline,name,price;
        double yjastt=95.00;
        name="Yakult Jasmine Tea(Tall)";
        price="95.00";
        yjteat="Yakult Jasmine Tea(Tall)=P95.00";
        newline="\n";
        display.setText(display.getText()+yjteat);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+yjastt;
        total.setText(""+atdog);
            DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Yakult Jasmine Tea',SIZEE='Tall',PRICEORDER=95.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_yjttActionPerformed

    private void yjtrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yjtrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String yjtear,newline;
        double yjastr;
        yjastr=85.00;
        yjtear="Yakult Jasmine Tea(Regular)=P85.00";
        newline="\n";
        display.setText(display.getText()+yjtear);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+yjastr;
        total.setText(""+atdog);
             DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Yakult Jasmine Tea',SIZEE='Regular',PRICEORDER=85.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_yjtrActionPerformed

    private void sytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sytActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String syakultt,newline,name,price;
        name="Strawberry Yakult(Tall)";
        price="105.00";
        double strawyakultt;
        strawyakultt=105.00;
        syakultt="Strawberry Yakult(Tall)=P105.00";
        newline="\n";
        display.setText(display.getText()+syakultt);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+strawyakultt;
        total.setText(""+atdog);
          DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Strawberry Yakult',SIZEE='Tall',PRICEORDER=105.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }
        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_sytActionPerformed

    private void syrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String syakultr,newline,name,price;
        name="Strawberry Yakult(Regular)";
        price="95.00";
        double strawyakultr;
        strawyakultr=95.00;
        syakultr="Strawberry Yakult(Regular)=P95.00";
        newline="\n";
        display.setText(display.getText()+syakultr);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+strawyakultr;
        total.setText(""+atdog);
         DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Strawberry Yakult',SIZEE='Regular',PRICEORDER=95.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_syrActionPerformed

    private void pytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pytActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String pyakultt,newline,name,price;
        name="Peach Yakult(Tall)";
        price="105.00";
        double peachyt;
        peachyt=105.00;
        pyakultt="Peach Yakult(Tall)=P105.00";
        newline="\n";
        display.setText(display.getText()+pyakultt);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+peachyt;
        total.setText(""+atdog);
         DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Peach Yakult',SIZEE='Tall',PRICEORDER=105.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_pytActionPerformed

    private void pyrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pyrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String pyakultr,newline,name,price;
        name="Peach Yakult(Regular)";
        price="95.00";
        double peachyr;
        peachyr=95.00;
        pyakultr="Peach Yakult(Regular)=P95.00";
        newline="\n";
        display.setText(display.getText()+pyakultr);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+peachyr;
        total.setText(""+atdog);
           DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Peach Yakult',SIZEE='Regular',PRICEORDER=95.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_pyrActionPerformed

    private void pfytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfytActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String pfyakultt,newline,name,price;
        name="Passionfruit Yakult(Tall)";
        price="105.00";
        double passionfyt;
        passionfyt=105.00;
        pfyakultt="Passionfruit Yakult(Tall)=P105.00";
        newline="\n";
        display.setText(display.getText()+pfyakultt);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+passionfyt;
        total.setText(""+atdog);
             DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Passionfruit Yakult',SIZEE='Tall',PRICEORDER=105.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_pfytActionPerformed

    private void pfyrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfyrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String pfyakultr,newline,name,price;
        name="Passionfruit Yakult(Regular)";
        price="95.00";
        double passionfyr;
        passionfyr=95.00;
        pfyakultr="Passionfruit Yakult(Regular)=P95.00";
        newline="\n";
        display.setText(display.getText()+pfyakultr);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+passionfyr;
        total.setText(""+atdog);
         DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Passionfruit Yakult',SIZEE='Regular',PRICEORDER=95.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_pfyrActionPerformed

    private void lytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lytActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String lyakultt,newline,name,price;
        name="Lychee Yakult(Tall)";
        price="105.00";
        double lychyt;
        lychyt=105.00;
        lyakultt="Lychee Yakult(Tall)=P105.00";
        newline="\n";
        display.setText(display.getText()+lyakultt);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+lychyt;
        total.setText(""+atdog);
 DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));
        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Lychee Yakult',SIZEE='Tall',PRICEORDER=105.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_lytActionPerformed

    private void lyrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lyrActionPerformed
        // TODO add your handling code here:
        conn= Moonleaf1.ConnecrDb();
        String lyakultr,newline,name,price;
        name="Lychee Yakult(Regular)";
        price="95.00";
        double lychyr;
        lychyr=95.00;
        lyakultr="Lychee Yakult(Regular)=P95.00";
        newline="\n";
        display.setText(display.getText()+lyakultr);
        display.append(newline);

        atdog=Double.parseDouble(total.getText())+lychyr;
        total.setText(""+atdog);
         DecimalFormat decimalFormat = new DecimalFormat("#.00");
         String number2;
           number2 = decimalFormat.format(atdog);
            total.setText(String.valueOf(number2));

        try{

            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED "
                + "set PROD='Lychee Yakult',SIZEE='Regular',PRICEORDER=95.00 where DATEORDERED= to_timestamp('"+content+"')");
            conn.close();
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println(display.getText());
            display.setText(display.getText());
            writer.close();

        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println(total.getText());
            total.setText(total.getText());
            writer.close();
        }  catch (FileNotFoundException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        try(FileWriter writer=new FileWriter("officialreceipt.txt",true)){
            PrintWriter pwriter=new PrintWriter(writer);
            pwriter.println(name+"                "+price);
            pwriter.close();
        }  catch (IOException ex) {
            Logger.getLogger(Yakultmoonleaf.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(name+"                    "+price);

    }//GEN-LAST:event_lyrActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    private void jLabelClose2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelClose2MouseClicked
        // Close
        System.exit(0);
    }//GEN-LAST:event_jLabelClose2MouseClicked

    private void JLabelMin2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JLabelMin2MouseClicked
        // TODO add your handling code here

        this.setState(javax.swing.JFrame.ICONIFIED);
    }//GEN-LAST:event_JLabelMin2MouseClicked

    private void add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add1ActionPerformed
        // TODO add your handling code here:
        conn=Moonleaf1.ConnecrDb();
        SimpleDateFormat sdf=new SimpleDateFormat ("dd-MMM-yy hh:mm:ss aa");
        String datee=sdf.format(new Date()).toString();

        try{

            Statement st= conn.createStatement();
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            st.executeUpdate("UPDATE ORDERED SET STATUS='ADD' WHERE DATEORDERED=to_timestamp('"+content+"')");
            st.executeUpdate("INSERT INTO ORDERED "+ "VALUES('"+datee+"','','','','','','')");
            conn.close();
            try(PrintWriter writer=new PrintWriter("time.txt", "UTF-8")){
                writer.println(datee);
                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_add1ActionPerformed

    private void addonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addonsActionPerformed
        // TODO add your handling code here:
        addons user=new addons();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_addonsActionPerformed

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        // TODO add your handling code here:
        paymentmoonleaf user=new paymentmoonleaf();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_paymentActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf=new SimpleDateFormat ("dd-MMM-yy hh:mm:ss aa");
        String datee=sdf.format(new Date()).toString();
        conn=Moonleaf1.ConnecrDb();

        display.setText("");
        total.setText("0.00");

        try{
            String content;
            content=new String(Files.readAllBytes(Paths.get("time.txt")));
            Statement st= conn.createStatement();
            st.executeUpdate("UPDATE ORDERED SET STATUS='CHANGED' WHERE DATEORDERED= to_timestamp('"+content+"')");
            st.executeUpdate("DELETE ORDERED WHERE STATUS='CHANGED'");
            st.executeUpdate("DELETE ORDERED WHERE STATUS='ADD'");
            st.executeUpdate("INSERT INTO ORDERED VALUES ('"+datee+"','','','','','','')");
            conn.close();
            try(PrintWriter writer=new PrintWriter("time.txt", "UTF-8")){
                writer.println(datee);

                writer.close();}
        } catch (Exception e) {

        }

        try(PrintWriter writer=new PrintWriter("copy.txt", "UTF-8")){
            writer.println("");
            display.setText(display.getText());
            writer.close();
        }

        catch (FileNotFoundException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }

        //clearing totaaaaaalllllll
        try(PrintWriter writer=new PrintWriter("total.txt", "UTF-8")){
            writer.println("");
            total.setText(total.getText());
            writer.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        try(PrintWriter writer=new PrintWriter("officialreceipt.txt", "UTF-8")){
            writer.println("                   *Moonleaf Cafe*                     ");
            writer.println("                 "+ datee);
            writer.println("Order"+"                                          "+ "Price");
            writer.close();} catch (FileNotFoundException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(moonleafbasicsize.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clearActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        frame1 user=new frame1();
        user.setVisible(true);
        user.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Yakultmoonleaf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Yakultmoonleaf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Yakultmoonleaf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Yakultmoonleaf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Yakultmoonleaf().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabelMin2;
    private javax.swing.JButton add1;
    private javax.swing.JButton addons;
    private javax.swing.JButton back;
    private javax.swing.JButton clear;
    private javax.swing.JTextArea display;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelClose2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton lyr;
    private javax.swing.JButton lyt;
    private javax.swing.JButton payment;
    private javax.swing.JButton pfyr;
    private javax.swing.JButton pfyt;
    private javax.swing.JButton pyr;
    private javax.swing.JButton pyt;
    private javax.swing.JButton syr;
    private javax.swing.JButton syt;
    private javax.swing.JTextField total;
    private javax.swing.JButton yjtr;
    private javax.swing.JButton yjtt;
    private javax.swing.JButton ymtmsr;
    private javax.swing.JButton ymtmst;
    private javax.swing.JButton ymtr;
    private javax.swing.JButton ymtt;
    // End of variables declaration//GEN-END:variables
}
